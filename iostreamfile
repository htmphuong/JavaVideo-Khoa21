package iostream;

import java.awt.EventQueue;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class iostreamfile {

	private JFrame frame;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					iostreamfile window = new iostreamfile();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public iostreamfile() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 622, 436);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		JMenuBar menuBar = new JMenuBar();
		menuBar.setBounds(39, 10, 101, 22);
		frame.getContentPane().add(menuBar);
		
		JMenu mnNewMenu = new JMenu("File");
		menuBar.add(mnNewMenu);
		
		JMenuItem mntmNew = new JMenuItem("New");
		mnNewMenu.add(mntmNew);
		
		JMenuItem mntmOpen = new JMenuItem("Open");
		JTextArea taFile = new JTextArea();
		taFile.setBounds(39, 66, 520, 280);
		mntmOpen.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				//open dialog and select a file to read
				JFileChooser jfc = new JFileChooser();
				int r = jfc.showOpenDialog(null);
				if(r==JFileChooser.APPROVE_OPTION) {
					String selectedFile = jfc.getSelectedFile().toString();
					System.out.println(selectedFile);
					//dung FileInputStream de doc tona bo noi dung trong selectedFile ra
					try {
						FileInputStream fis = new FileInputStream(selectedFile);
						BufferedInputStream bis = new BufferedInputStream(fis);
						int ch=0;
						String content ="";
						while((ch=bis.read())!=-1)
						{
							content+=(char)ch;							
						}	
						taFile.append(content);
						
						
					} catch (Exception e2) {
						// TODO: handle exception
					}
					
				}
				
				
				
			}
		});
		mnNewMenu.add(mntmOpen);
		
		JMenuItem mntmSaveAs = new JMenuItem("Save As");
		mntmSaveAs.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					JFileChooser jfc = new JFileChooser();
					int r = jfc.showSaveDialog(null);
					if(r==JFileChooser.APPROVE_OPTION) {
						String selectedFile = jfc.getSelectedFile().toString();						
						FileOutputStream fos = new FileOutputStream(selectedFile);
						String s = taFile.getText();
						byte[] b = s.getBytes();
						fos.write(b);
						fos.close();
					}
				} catch (Exception e2) {
					// TODO: handle exception
					e2.printStackTrace();
				}
			}
		});
		mnNewMenu.add(mntmSaveAs);
		
		
		frame.getContentPane().add(taFile);
	}
}
